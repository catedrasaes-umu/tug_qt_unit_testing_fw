{
  "name": "TUG: GUI Unit Testing for Qt apps",
  "tagline": "A framework to create batteries of tests for Qt applications in Linux, Windows and OS systems. ",
  "body": "\r\n**TUG** means *GUI Unit Testing* (*Testing Unitario GUI* in Spanish). It is a framework to create test batteries for Qt applications in Linux, Windows and OS systems. \r\n\r\nThe TUG framework is based on the Qt Test framework, and is composed of two elements:\r\n* TUGLib: a C++ library to support GUI unit testing (requires Qt 4.8 or higher).\r\n* TUG Wizard: wizard application to create test projects (requires Java RE).\r\n\r\n\r\n# what does TUG provide?\r\n\r\nA video better than a thausand words: https://www.youtube.com/watch?v=tUis6JrycrA\r\n\r\n[![TUG VIDEO](http://img.youtube.com/vi/tUis6JrycrA/0.jpg)](http://www.youtube.com/watch?v=tUis6JrycrA)\r\n\r\nAfter 7 steps, 3-5 minutes and no code, you get:\r\n* 1000+ lines of code generated\r\n* test projects ready to compile and run\r\n* only test actions remain to be coded\r\n* all tests and testsuites arranged into a standalone project: 1 test suite = 1 subproject = 1 binary\r\n* high-level, interactive reports on the web browser\r\n* profiling and coverage analysis\r\n\r\n# what does a TUG package/release contain?\r\n\r\nA new release can be created by executing \"scripts/create_release.sh\". This script receives the version\r\nnumber as a single argument.\r\n\r\nGenerated releases can be found at \"releases/\" folder. Each one includes:\r\n\r\n* doc/............. usage quick guide\r\n* libTUG_project/.. C++ project of GUI unit testing library.\r\n* TUG_wizard/...... wizard application to create test projects (requires Java RE).\r\n* install.sh....... libTUG installer. Type \"./install.sh --help\" for further info.\r\n   \r\nPlease, go to \"doc/\" folder and open TUG_doc.pdf to find a quick usage guide and \r\nfurther information about this testing framework.\r\n\r\n# compile, (modify) and run TUG\r\n\r\nThe projects composing TUG can be easily imported and compiled from Eclipse (https://eclipse.org/downloads/). Just follow these steps:\r\n\r\n1. Download this repository and install Eclipse. Open Eclipse.\r\n2. File > Import > Existing Projects into Workspace. (Next)\r\n3. Select root directory of the project.\r\n4. Repeat 2 and 3 for the three projects: **qt48_model**, **tug_generation_wizard**, **tug_testapi_codegen**.\r\n\r\nMaven will download all dependencies and everything should run fine.\r\n\r\nProblems? Please, contact me at [pedrolmn@gmail.com](mailto:pedrolmn@gmail.com)\r\n\r\n# contents of this repository\r\n\r\n* doc/.................... Sources of TUG documentation. TUG_doc.pdf includes the docs of this project.\r\n* examples/............... Some full examples showing TUG usage with Qt projects\r\n* qt48_model.............. Model of Qt GUIs for code generation (supports Qwt as well)\r\n* releases/............... Includes TUG releases. Read [above](http://github.com/pedromateo/tug_qt_unit_testing_fw#what-does-a-tug-packagerelease-contain)\r\n* tug_base_lib/........... TUG GUI unit testing library sources organized into a QT Creator project (need to be installed to use TUG).\r\n* tug_generation_wizard/.. Sources for the wizard application (Eclipse Java project).\r\n* tug_mde_dependencies/... MDE dependencies organized as an Eclipse Java project.\r\n* tug_testapi_codegen/.... Sources for the testing Qt panel generator (Eclipse Acceleo project).\r\n* LICENSE................. License file.\r\n* README.md............... This file.\r\n\r\n\r\n# about\r\n\r\nTUG project was born with the main purpose of providing a unit testing framework for graphical user interfaces. The main goal was providing developers with a method to easily create a battery of tests for Qt-based applications. The tests had to simulate, as far as possible, users interaction with the interface.\r\n\r\nWith this purpose, the TUG project is divided into two main components:\r\n\r\n* **TUG Wizard**: a wizard-like application that helps developers to create and configure, step by step, a test project aimed at testing a Qt based panel as well as the underlying model and communication classes (if they exists). It generates a new panel inheriting the original one. This new panel includes customized methods to simulate users interaction with the widgets composing the panel. It can also generate a full, standalone test project including testsuites and empty test methods ready for being filled with testing code.\r\n\r\n* **TUG Base Library**: a library aimed at supporting the tests generated by TUG Wizard, as well as test projects created manually by developers. It provides a way to structure test suites, as well as a set of methods to support the definition of GUI tests, all around the Qt Test framework.\r\n  \r\n# credits\r\n\r\n*The TUG Project is an initiative of CÃ¡tedra SAES (http://www.catedrasaes.org) funded by the SAES company\r\n(http://www.electronica-submarina.com). This project and all its components have been designed and developed at University of Murcia (Spain).*\r\n",
  "google": "UA-70402424-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}